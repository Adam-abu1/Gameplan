// This file is auto-generated by @hey-api/openapi-ts

import type { ClientOptions } from './types.gen';
import { type Config, type ClientOptions as DefaultClientOptions, createClient, createConfig } from '@hey-api/client-nuxt';
import { createClientConfig } from '../clientConfig';

/**
 * The `createClientConfig()` function will be called on client initialization
 * and the returned object will become the client's initial configuration.
 *
 * You may want to initialize your client this way instead of calling
 * `setConfig()`. This is useful for example if you're using Next.js
 * to ensure your client always has the correct values.
 */
export type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> = (override?: Config<DefaultClientOptions & T>) => Config<Required<DefaultClientOptions> & T>;

export const client = createClient(createClientConfig(createConfig<ClientOptions>({
    baseURL: 'https://api.rawg.io/api',
    onRequest: (context) => {
        const config = useRuntimeConfig();
        const key = config.rawgApiKey; // You can fetch this dynamically if needed
        if (key) {
            const url = new URL(context.request, context.options.baseURL || '');
            url.searchParams.set('key', key);
            context.request = url.toString();
        }
    }
})));